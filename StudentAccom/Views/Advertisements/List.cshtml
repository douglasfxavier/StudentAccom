@model StudentAccom.Models.Accommodation

@{
    if (User.IsInRole("Landlord")) {
        ViewBag.Title = "My Advertisements";
    } else {
        ViewBag.Title = "All Advertisements";
    }

    Dictionary<string, string> Landlords = (Dictionary<string, string>) ViewData["Landlords"];
    IEnumerable<StudentAccom.Models.Accommodation> Accommodations = (IEnumerable<StudentAccom.Models.Accommodation>) ViewData["Accommodations"];

}



<h2>@ViewBag.Title</h2>

<p class="link-right">
    @if (Request.IsAuthenticated && User.IsInRole("Landlord")) {
        @Html.ActionLink("New Advertisement", "../Accommodation/Create")
    }
</p>
@using (Html.BeginForm("List", "Advertisements", FormMethod.Get)) {
    <label>Filter by status</label> @Html.DropDownList("Status", "All");
    <input type="submit" value="Filter" />
    <input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />
}

<div class="table-responsive">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                Type
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                Landlord/Company
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                Actions
            </th>
        </tr>

        @foreach (var accom in Accommodations) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => accom.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => accom.TypeAccom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => accom.Location)
                </td>
                <td>
                    &pound; @Html.DisplayFor(modelItem => accom.Price) / @Html.DisplayFor(modelItem => accom.TypeRent)
                </td>
                <td>
                    @Landlords[accom.LandlordID]
                </td>
                <td>
                    @Html.DisplayFor(modelItem => accom.Status)
                </td>
                <td>
                    @Html.ActionLink("Details", "../Accommodation/Details", new { id = accom.ID })
                    @if (Request.IsAuthenticated && User.IsInRole("Landlord")) {
                        <span> | </span>
                        @Html.ActionLink("Edit", "../Accommodation/Edit", new { id = accom.ID })
                        <span> | </span>
                        @Html.ActionLink("Delete", "../Accommodation/Delete", new { id = accom.ID })
                    }

                </td>
            </tr>
        }
    </table>
</div>